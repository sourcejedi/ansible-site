# Don't want rpcbind running.
#
# (Note since NFSv4, NFS does not use rpcbind at all).
#
# Some packages (monitoring-plugins-standard for icinga) recommend it,
# and then Debian will start it.  Protect against this.
#
# We can just "systemctl mask rpcbind".
#
#
# Debian 8 Jessie also installed rpcbind by default.
# https://unix.stackexchange.com/questions/383013/why-does-debian-come-without-a-firewall-enabled-by-default/383021#383021
#
# While we're here, maybe we can support Fedora as well. Fedora 25 used
# to enable rpcbind, and not in the way you'd expect from Fedora
# policy.  Another reason it can be confusing is that rpcbind.service
# is not started at boot; but rpcbind.socket is, which can activateit
# on demand.  It is sufficient to just mask the service, but that is
# confusing.  Mask the socket unit as well.
#
# https://unix.stackexchange.com/questions/369937/fedora-25-and-disabling-whatever-is-listening-on-port-111/369943#369943
#
#
# I have not put this on Galaxy.  At minimum, it needs some prominent
# warning that if you ever want to enable rpcbind, you will have to
# remember to unmask it as well.

# systemd module refuses to mask services which do not exist

- name: "Mask rpcbind.socket"
  file:
    path: /etc/systemd/system/rpcbind.socket
    state: link
    src: /dev/null

- name: "Mask rpcbind.service"
  file:
    path: /etc/systemd/system/rpcbind.service
    state: link
    src: /dev/null

# "fix" check mode

- name: "rpcbind.socket must be masked, for a later task"
  file:
    path: /etc/systemd/system/rpcbind.socket
    state: link
    src: /dev/null
  register: mask_rpcbind_socket
  failed_when: mask_rpcbind_socket.changed

- name: "rpcbind.service must be masked, for a later task"
  file:
    path: /etc/systemd/system/rpcbind.service
    state: link
    src: /dev/null
  register: mask_rpcbind_service
  failed_when: mask_rpcbind_service.changed

# Try to disable the service if it is enabled.  Otherwise systemd will
# warn about the mask at boot time.
#
# Ansible 2.5 does not disable masked services correctly.
# (`systemctl disable` does).
# This hack makes a reasonable assumption that enabling rpcbind.service
# adds it as a dependency of multi-user.target.
#
# (Disabling rpcbind does *not* make the mask redundant.  The mask
# stops rpcbind being enabled when rpcbind is installed, in case
# rpcbind has not been installed yet, but it gets pulled in later
# when the sysadmin installs another package).

- name: "Disable rpcbind.socket"
  file:
    path: /etc/systemd/system/sockets.target.wants/rpcbind.socket
    state: absent

- name: "Disable rpcbind.service"
  file:
    path: /etc/systemd/system/multi-user.target.wants/rpcbind.service
    state: absent

# ansible seems happy to stop services which are masked though :)

- name: "Stop rpcbind.socket"
  systemd:
    # ansible 2.2 doesn't let me split out daemon_reload as a separate task
    daemon_reload: yes

    name: rpcbind.socket
    state: stopped
    enabled: no  # "belt and braces"; redundant with the previous tasks

- name: "Stop rpcbind.service"
  systemd:
    name: rpcbind.service
    state: stopped
    enabled: no  # "belt and braces"; redundant with the previous tasks
