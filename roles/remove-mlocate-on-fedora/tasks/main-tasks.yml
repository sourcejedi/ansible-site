# I don't like updatedb running as a scheduled task.
# It's maybe less likely to be a problem than it used to be
# (mlocate optimization).  But I don't use it, so it's simplest to remove.

# Remove the package carefully, aborting on dependents.
# Wish this was cleaner, but it's not supported by Ansible dnf module.
# import_role would make this nicer, but it requires Ansible 2.4.0.

# 1/3) Query condition
- name: query  | is mlocate installed?
  # Get the list of package names, and look for "mlocate".
  # Make sure to detect errors.
  shell: |
    set -o errexit -o pipefail
    (rpm -qa --qf '%{NAME}\n' || exit 2) | grep ^mlocate$
  args:
    executable: /bin/bash
  register: mlocate_installed
  failed_when: mlocate_installed.rc not in [0, 1]
  check_mode: False
  changed_when: False

# 2/3) Run command task conditionally, to provide accurate "changed" status
- name: ensure | mlocate is not installed
  command: rpm -e mlocate
  when: mlocate_installed.rc == 0
  args:
    # Can't use ansible dnf module.  It would remove packages which depend
    # on mlocate, without prompting.
    warn: False

# 3/3) The condition must now hold.  This "fixes" ansible check mode.
- name: check  | mlocate is not installed
  # Get the list of package names, and look for "mlocate".
  # Make sure to detect errors.
  shell: |
    set -o errexit -o pipefail
    (rpm -qa --qf '%{NAME}\n' || exit 2) | grep ^mlocate$
  args:
    executable: /bin/bash
  register: mlocate_installed_check
  failed_when: mlocate_installed_check.rc != 1
  check_mode: False
  changed_when: False

# On a Fedora 27 VM (upgraded from earlier version),
# I noticed `dnf autoremove` take out grub, os-prober
# and kernel-modules-extra, as well as sssd-nfs-idmap.
# So maybe let's not do that for now.
#
# Interestingly packages installed by PackageKit are
# correctly excluded from `dnf autoremove`.
# So I'm not sure what _is_ causing that.
#
#- name: Remove unused packages
#  dnf:
#    autoremove: True
