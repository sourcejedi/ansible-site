#!/bin/sh

# Note: bup generates progress messages when run in a tty,
# but when run from cron it will be silent unless there are errors.
#
# We rely on error messages being printed (as is usual).
# We don't try to set an exit status on errors
#
# Tested on Debian Stretch.
# The version of `bup save` in Jessie returned errors
# as it did not handle sockets or pipes.

cd /data/backup/bup || exit 1

for i in *; do
	[ -d "$i" ] || continue

	HOME_DIR=/home/"$i"
	export BUP_DIR="$PWD"/"$i"

	# bup index.  We don't check if there's an error logged here.
	# Just keep going so we save anything we can.
        #
        # Simplified for parity - borgbackup test
	#bup index "$HOME_DIR" --exclude "$HOME_DIR"/.cache --exclude "$HOME_DIR"/.mozilla
	#[ -d "$HOME_DIR"/.mozilla ] && bup index "$HOME_DIR"/.mozilla/firefox/*/bookmarkbackups
        #
        bup index "$HOME_DIR" --exclude "$HOME_DIR"/.cache

	bup save -q -n "$i" "$HOME_DIR"
done

# Disabled for parity - borgbackup test
#
# # Generate par2 redundancy.
# # Although this is a `bup fsck` command, it only runs checks
# # on the newly created packs that want par2 files creating.
# #
# # It doesn't look like using the --quick option actually helps.
# # par2 is very cpu-intensive anyway
# # (and verify-pack doesn't look to be very intensive, even in it's IO).
#
# for i in *; do
# 	[ -d "$i" ] || continue
# 	export BUP_DIR="$PWD"/"$i"
# 	bup fsck -g
# done
