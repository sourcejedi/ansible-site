
# localhost - home server #

object Host "localhost" {
  import "local-host"

  address = "localhost"

  vars.os = "Linux"
  vars.mail = true
}

# gateway - home router #

object Host "gateway" {
  import "generic-host"

  address = "172.16.1.1"

  # ping_packets defaults to 5
  vars.ping_wpl = 40
  vars.ping_cpl = 40
  vars.ping_wrta = 250
  vars.ping_crta = 500
}

object Host "conduit" {
  import "generic-host"

  address = "conduit"

  # ping_packets defaults to 5
  vars.ping_wpl = 40
  vars.ping_cpl = 40
  vars.ping_wrta = 250
  vars.ping_crta = 500

  # Conduit is a pain.  It starts dropping packets, flapping horribly,
  # and has to be rebooted.  Using a hair-trigger will catch it earlier.
  # (I'm not bothered about trying to reduce alerts from flapping.
  #  If it does get very noisy, that could actually be useful.)
  max_check_attempts = 1

  vars.mail = true
}

object Service "http-port" {
  import "generic-service"

  host_name = "conduit"
  check_command = "tcp"
  vars.tcp_port = 80
  vars.tcp_wtime = 0.250
  vars.tcp_ctime = 0.500

  max_check_attempts = 2
  vars.mail = true
}

object Service "http" {
  import "generic-service"

  host_name = "conduit"
  check_command = "http"
  vars.http_warn_time = 0.250
  vars.http_critical_time = 0.500

  max_check_attempts = 2
  vars.mail = true
}

# test dns resolvers, using "mail.google.com" (hosted same continent) #

template Service "dig mail.google.com" {
  # "dns" checks for a specific answer
  # "dig" checks for any answer from dig
  check_command = "dig"
  vars.dig_server = "$host.address$"
  vars.dig_lookup = "mail.google.com"
}

object Service "dig mail.google.com" {
  import "generic-service"
  import "dig mail.google.com"

  host_name = "gateway"
}


object HostGroup "dns from thephone.coop" {
  assign where match("dns* from thephone.coop", host.name)
}

apply Service "dig mail.google.com" {
  import "external-service"
  import "dig mail.google.com"

  assign where "dns from thephone.coop" in host.groups
}

object Host "dns1 from thephone.coop" {
  import "external-host"

  address = "79.79.79.77"
}

object Host "dns2 from thephone.coop" {
  import "external-host"

  address = "79.79.79.78"
}

# now test reachability of mail.google.com #

object Host "mail.google.com" {
  import "external-host"

  address = "mail.google.com"
}
# no dependency
# only host dependencies are really any good
# we're not using notifications either
# so the question of whether to suppress them or not does not arise

# ISP webserver #

object Host "www.thephone.coop" {
  import "external-host"

  address = "www.thephone.coop"

  # No ICMP ping
  # They happen to do HTTPS, but I assume they'll keep running HTTP
  # (as a redirect for manually entered urls)
  check_command = "tcp"
  vars.tcp_port = 80
  vars.tcp_wtime = 0.500
  vars.tcp_ctime = 1.000
}

# other continent #

# This is marginally justifiable, because I've given them money.
# Purpose is to track ISP->America outages.  Not for timely alerts.

object Host "metafilter.com" {
  import "external-host"
  check_interval = 15m
  retry_interval = 3m

  address = "metafilter.com"

  check_command = "tcp"
  vars.tcp_port = 80
  vars.tcp_wtime = 0.700
  vars.tcp_ctime = 1.200
}
