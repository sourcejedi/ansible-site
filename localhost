#!/bin/sh
set -e

fatal_usage() {
	echo "Usage: $0 hostname [options] playbook..."
	exit 1
}

# Hack - hostname must be first argument, before ansible-playbook options.
HOST="$1"
[ -n "$HOST" ] || fatal_usage
shift

# This script requires the user to pass the correct hostname.
# The idea is to encourage awareness and reduce accidents.
# Whether this is raelly a good idea may be debatable :).
#
# In case you wonder how I automate setting the hostname, I don't.
# I'm still using manual installers, which prompt you to enter one.
# (Except for nspawn containers.  For those, I use a checklist.)
#
# Assumption: Hosts with the same short name are out of scope.
# This is a script for human use, and no-one wants to type in FQDNs.
#
# System hostnames seem not to be set to FQDNs by default.
# If this is wrong, simply replace `hostname` with `hostname -s` below.

LOCALHOST="$(hostname)"
if [ "$HOST" != "$LOCALHOST" ]; then
	echo "Error: local hostname is actually '$LOCALHOST'"
	fatal_usage
fi

# Run this script with sudo, it remembers password unlike ansible --ask-become-pass.
# Unless sudo is not installed yet.
SUDO=
if command -v sudo > /dev/null; then
	SUDO=sudo
fi

# Disable use of sudo in Ansible, in case sudo is not installed yet.

$SUDO ansible-playbook --limit "$HOST" -c local -e ansible_become= "$@"
